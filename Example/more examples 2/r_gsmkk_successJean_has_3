// RStarSearch
digraph {
	graph [rankdir=LR]
	Start [label="User: Jean has 30 lollipops. Jean eats 2 of the lollipops. With the remaining lollipops, Jean wants to package 2 lollipops in one bag. How many bags can Jean fill? Start of Search
Path: Start" color=black shape=box]
	Start -> Node0 [label=StartNode0]
	Node0 [label="V:2, H:8, Flag:False
[\"1. Let's start with the total number of lollipops, which is 30. Jean eats 2 out of these. So, she has 30 - 2 = 28 remaining lollipops now.\n        2. Now,\", 58, 0.9774946593998878]
Path: StartNode0" color=black shape=box]
	Start -> Node1 [label=StartNode1]
	Node1 [label="V:2, H:8, Flag:False
['1. We know that initially Jean has 30 lollipops.\n        2. After eating 2 of them, she is left with 30 - 2 = 28 loll', 43, 0.4826527405391686]
Path: StartNode1" color=black shape=box]
	Start -> Node2 [label=StartNode2]
	Node2 [label="V:1, H:5, Flag:False
['1. We know that Jean initially has 30 lollipops.\n        2. After eating 2 of them, she is left with 30 - 2 = 28 lollipops.\n        3. Now, Jean wants to package 2 lollipops in each bag. To find out how many bags can be filled, we need to divide the remaining number of lollipops (28', 91, 0.46861138188672147]
Path: StartNode2" color=black shape=box]
	Start -> Node3 [label=StartNode3]
	Node3 [label="V:2, H:7, Flag:False
['1. Start with the total number of lollipops Jean has: 30 lollipops.\n        2. Subtract the number of lollipops Jean eats: 30 - 2 = 28 lollipops remaining.\n        3. Determine how many', 64, 0.03069371541470678]
Path: StartNode3" color=black shape=box]
	Start -> Node4 [label=StartNode4]
	Node4 [label="V:3, H:7, Flag:False
['1. Start with the total number of lollipops Jean has: 30 lollipops.\n        2. Subtract the number of lollipops Jean eats: 30 - 2 = 28 lollipops remaining.\n        3', 59, 0.37298561814136033]
Path: StartNode4" color=black shape=box]
	Start -> Node5 [label=StartNode5]
	Node5 [label="V:2, H:7, Flag:False
['1. Jean initially has 30 lollipops.\n        2. After eating 2 lollipops, she has 30 - 2 = 28 lollipops left.\n        3. She wants to package', 52, 0.22293287707599552]
Path: StartNode5" color=black shape=box]
	Start -> Node6 [label=StartNode6]
	Node6 [label="V:1, H:6, Flag:False
['1. Start with the total number of lollipops: 30 lollipops.\n        2. Subtract the ones eaten by Jean: 30 - 2 = 28 remaining lollipops.\n        3. Now, each bag should contain 2 lollipops for packaging.\n        4. Divide the', 75, 0.9336280479308999]
Path: StartNode6" color=black shape=box]
	Node2 -> Node7 [label=Node2Node7]
	Node7 [label="V:0, H:0, Flag:False
['4. by the number of lollipops per bag (2). So, 28 / 2 = 14 bags.\n        Jean can fill 14 bags with the remaining lollipops.', 118, 0.2592032083790813]
Path: Node2Node7" color=green shape=box]
	Node2 -> Node8 [label=Node2Node8]
	Node8 [label="V:0, H:0, Flag:False
['4. by the number of lollipops per bag (2). So, 28 / 2 = 14.\n        5. Therefore, Jean can fill 14 bags with the remaining lollipops.', 68, 0.10671308446537364]
Path: Node2Node8" color=green shape=box]
	Node2 -> Node9 [label=Node2Node9]
	Node9 [label="V:0, H:0, Flag:False
['4. by the number of lollipops per bag (2). So, 28 / 2 = 14 bags can be filled with this arrangement.', 82, 0.6223584438276984]
Path: Node2Node9" color=green shape=box]
	Node2 -> Node10 [label=Node2Node10]
	Node10 [label="V:0, H:0, Flag:False
[\"4. Therefore, 28 / 2 = 14 bags can be filled with Jean's remaining lollipops.\", 100, 0.9999374809249258]
Path: Node2Node10" color=green shape=box]
	Node2 -> Node11 [label=Node2Node11]
	Node11 [label="V:0, H:0, Flag:False
['4. So, 28 / 2 = 14 bags can be filled with 2 lollipops each.', 115, 0.5858332141257426]
Path: Node2Node11" color=green shape=box]
	Node2 -> Node12 [label=Node2Node12]
	Node12 [label="V:0, H:0, Flag:False
[\"4. We'll perform the division: 28 / 2 = 14 bags.\n\nSo, Jean can fill 14 bags with the remaining lollipops after eating two and putting each bag to contain exactly two lollipops.\", 98, 0.757287323307988]
Path: Node2Node12" color=green shape=box]
	Node2 -> Node13 [label=Node2Node13]
	Node13 [label="V:0, H:0, Flag:False
['4. by the number of lollipops per bag (2). So, 28 / 2 = 14 bags.\n        Jean can fill 14 bags with the remaining lollipops.', 92, 0.292387494595748]
Path: Node2Node13" color=green shape=box]
}
